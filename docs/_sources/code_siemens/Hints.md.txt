# Hints

## Overwrite a Repo in Code.Siemens

The strategy is from [clear history of repository].

**Note**: activate *Force push* in GitLab

- delete the local `.git` folder
- create a local `.git` folder
- Then do the working copy

```Bash
-- Remove the history from
rm -rf .git

-- recreate the repos from the current content only
git init
git add .
git commit -m "Initial commit"

-- push to the github remote repos ensuring you overwrite history
git remote add origin git@github.com:<YOUR ACCOUNT>/<YOUR REPOS>.git
git push -u --force origin master
```

## Documentation for a git group

Best way: Create a website project for the group.
This works as a link from a higher perspective on the websites of subgroups and projects.
The recommended interpreter for static websites is *MkDocs*.

If you create badges in the git group, they are shown in every sub-element. So the Documentation of the git-group can be shown in every underlying repository.

For Communication consider creating a *Yammer Group* or an *MS-Team* or give the hint that communication is done by *Gitlab issues*.

The Subgroups of a git-group can also contain their website project.

It is recommended, that each project has also a documentation website.

## How to create Badges

Batches are the buttons at the beginning of the GitLab page.
For example have a look at [batches in CodeSiemens].

To create batches in a GitLab Repository, open the Repository Gitlab Page and navigate to: -->settings-->general-->Badges

Every batch contains a link and a graphic.

To create the graphic link for batches you can use [Shields.io]. It is an open-source batch generator.

**Gitlab Groups**: Group Badges appear in all repositories of the group

**Batches in Markdown**: Different for every Code-Cloud-Provider (e.g. Gitlab)

## User management with git groups

every git group can be used for user management.

Simultaneously to a single person a git group can be given access to a repository, another git Group, etc.

If this is used, the highest Rights for the Members of the added Gi-group can be specified. E.g: If Developer is chosen as highest right for the added Git-Group, this means the following for the members of the added group: An Reporter in the Git-group added stays a Reporter. But an Owner in the added Git-group only has Developer rights.

## Publish documentation as Gitlab Pages

All branches generate the documentation sites, the main branch has an additional step and copies the sites in the public folder.
So the user can only view the sites of the main branch.

[batches in CodeSiemens]: https://code.siemens.com/help/user/project/badges
[clear history of repository]: https://gist.github.com/stephenhardy/5470814
[Shields.io]: https://shields.io/
