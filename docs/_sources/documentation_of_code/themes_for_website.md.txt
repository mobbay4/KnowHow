# Themes for Websites

Abhängig davon, welchen Umfang eine Website annimmt macht es Sinn verschiedene Themes zu verwenden.

## Themes für SC

Wir nutzen das [sphinx-book-theme](#sphinx-book-theme)

## Sphinx

[Dokumentation von Sphinx.][sphinx_theming]

```{note}
Die Builtin themes von Sphinx sind nicht sehr ansprechend.
Deshalb bietet es sich an Third Party Themes zu verwenden.
```

Eine Übersicht welche Themes es für Sphinx gibt findet man in der [Sphinx Theme Gallary][sphinx_theme_gallary].

### sphinx-book-theme

[Beispielseite des sphinx-book-theme themes][themes_sphinx_book_theme].

Vorteile:

- Edit button
- Vollbild Modus

### furo

Theme mit wenig Einstellmöglichkeiten.

[Beispielseite des furo themes][themes_furo].

```{attention}
2022-03: Weil das Theme keinen Edit button bietet wird es nicht verwendet.
```

#### Edit Button for Furo

Since MK-Docs has this lovely feature of having an edit button on the HTML-rendered page that leads directly to the source file on GitLab, it would be nice to also have this feature for Sphinx. At the moment, this feature seems to be a bit rare under the Sphinx themes. However, the [Furo-Theme][themes_furo_quickstart] seems to [currently developing such a feature] for this. Sadly, this feature seems to be [not supported for the GitLab pages], but only for Read the Docs on GitHub. Nevertheless, the discussion section on this [issue page][issue page furo edit button]

## Third Party Themes

```{note}
Thired-Party Themes werden als python package verteilt.
```

Um ein Third Party Theme zu nutzen sind zwei Schritte notwendig:

- Install Theme in documentation's build environment.
- Update the html_theme in conf.py.

Beispiel: [Furo-Theme][themes_furo_quickstart] für Sphinx:

Im build environment:

```python
pip install furo
```

Im conf.py:

```python
html_theme = "furo"
```

## Themes mit Siemens Branding

```{note}
Wenn Siemens Theme verwendet werden müssen die Theme-packages von Code.Siemens und nicht vom öffentlichen pypi installiert werden.
```

Das Siemens Branding an sich wird von [Brandville] vorgegeben.

Aus den dort veröffentlichten Elementen werden dann von verschieden Gruppen Themes Vorlagen erstellt, z.B. von [SIMPL][simpl-siemens-brand].

Aus den Vorlagen werden dann Themes erstellt. Für MKDocs werden die Themes werden als python package bereitgestellt, z.B. [Code-Siemens MKDocs Theme][code_siemens_MKDocs_Theme].

Wenn wir Cooperate Design Websites brauchen sollten wir das [Code-Siemens MKDocs Theme][code_siemens_MKDocs_Theme] verwenden, da wir ausschließlich auf Code.Siemens gehostete Websites entwickeln wollen.

```{note}
Das [Code-Siemens MKDocs Theme][code_siemens_MKDocs_Theme] ist anscheinend auf den Code Siemens CI Runnern installiert. Im [Railigent Portfolio Navigator Repository][railigent_portfolio_nav_repo] werden keine Dependencies angegeben. (Könnte aber auch einen anderen Grund haben)

Es besteht inzwischen ein [eigenes Blueprint repository] für dieses design. Dabei wurde folgende Erfahrung gemacht. Das theme scheint nicht auf der code.Siemens CI/CD vorinstalliert zu sein. Daher muss es wie folgt installiert werden:

- Für die code.Siemens GitLab pipeline:

    python -m pip install mkdocs-code-siemens-code-docs-theme -i https://code.siemens.com/api/v4/projects/64538/packages/pypi/simple
- Für eine lokale installation:

    python -m pip install mkdocs-code-siemens-code-docs-theme -i https://devops.bt.siemens.com/artifactory/api/pypi/pypi-all/simple
```

Folgende Beispiele zeigen Websites die mit dem [Code-Siemens MKDocs Theme][code_siemens_MKDocs_Theme] erstellt wurden:

- [Railigent Portfolio Navigator][railigent_portfolio_nav], zugehöriges [Repository][railigent_portfolio_nav_repo].
- [Code Siemens Documentation][code_siemens]

[Brandville]: https://brandville.siemens.com/en/design-guides-templates/web-new/website
[code_siemens_MKDocs_Theme]: https://code.siemens.com/code-ops/docs-theme
[code_siemens]: https://code.siemens.io/docs/
[currently developing such a feature]: https://github.com/pradyunsg/furo/discussions/114
[eigenes Blueprint repository]: https://code.siemens.com/smo-rs-lmc-en-lm-sc/blueprints/mkdocs_cooperate_design
[issue page furo edit button]: https://github.com/pradyunsg/furo/discussions/114#discussioncomment-2252509
[not supported for the GitLab pages]: https://pradyunsg.me/furo/customisation/edit-button/
[railigent_portfolio_nav_repo]: https://code.siemens.com/railigent-public/portfolio
[railigent_portfolio_nav]: https://railigent-public.code.siemens.io/portfolio/
[simpl-siemens-brand]: https://code.siemens.com/simpl/simpl-siemens-brand
[simple_sphinx]: https://www.yammer.com/siemenscrosscollaboration/#/Threads/show?threadId=1263413445959680&search_origin=global&scoring=linear1Y-prankie-group-private-higher&match=any-exact&search_sort=relevance&page=1&search=simpl-theme-sphinx-newton
[sphinx_theme_gallary]: https://sphinx-themes.org/#themes
[sphinx_theming]: https://www.sphinx-doc.org/en/master/usage/theming.html
[themes_furo_quickstart]: https://pradyunsg.me/furo/quickstart/
[themes_furo]: https://sphinx-themes.org/sample-sites/furo/
[themes_sphinx_book_theme]: https://sphinx-themes.org/sample-sites/sphinx-book-theme/
