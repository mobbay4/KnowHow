# Sphinx Introduction

[Sphinx] is a Python packages documentation package with several powerful skills like [API documentation]. The following sections mention some important topics while working with [Sphinx]. To get a starting point, one should have a look at these blueprint repositories:

- [Sphinx-Website-Blueprint]
- [Sphinx-Python-Package-Blueprint]

The [Sphinx-Website-Blueprint] is intended for GitLab group websites, while [Sphinx-Python-Package-Blueprint] is for Python packages. This introduction can be used for both blueprints. Only for the [automatic API documentation], one should use the [Sphinx-Python-Package-Blueprint] repository as a blueprint.

## Sphinx Workflow

However, let us start with the introduction! First, we have to understand what [Sphinx] does. [Sphinx] enters at a master file, mostly the `index.md`/`index.rst` file, and creates a `.html` document from the text specified in the `index` file. Thereby, one can either write the complete documentation in the `index` file or split it into several sub-files and afterward include them in the `index` file. So the `index` file is something like the "Content Manager" for Sphinx. This section explains in detail how to add your contents in your documentation: [Index files, Toc-Trees, API, and more]. On the other hand, the `conf.py` file takes a central role because one specifies all settings, like `extensions`, `author`, `title`, `theme`, and so on.
To get familiar with adjusting this file, please read section: [conf.py].
Once you have defined the `index` and the `conf.py` file properly, one can, in principle generate the documentation.

There are two main ways where to build the documentation, see the following subchapters.

### build documentation on your PC

This way is handy to check if everything works as expected, and for proofreading before you commit your changes.
If you have a venv with the necessary Sphinx extensions installed, the build is particular faster as [building the documentation on GitLab pipeline](#build-documentation-on-gitlab-pipeline).

```{attention}
Sphinx only renders changed files.

So you will only see the Errors and Warnings for the changed files.

If you want to see all errors and warnings, delete the './build' folder. So Sphinx will render all files.

Sometimes, Sphinx also does not detect a change. If a change in markdown does not show up in the Html, delete the './build' folder and try again.
```

```{code-block} powershell
sphinx-build -b html source_folder target_folder
```

This command generates documentation using all information given in the `source_folder` and puts the generated `html`-files into the `target_folder`.
In the repositories following the structure of [Sphinx-Website-Blueprint] and [Sphinx-Python-Package-Blueprint], command is:

```{code-block} powershell
sphinx-build -b html docs/ docs/_build/html
```

#### Necessary Preparations

Create a *Python virtual environment* that contains all necessary packages for building the documentation.

#### Execution

Open the command line of choice. (recommended is PowerShell)

Activate the *Python virtual environment*.

Navigate to the folder of the repository the documentation is build for.

Enter the following command given in [build documentation on your PC](#build-documentation-on-your-pc). An example for this repository:

```{code-block} powershell
(build_sphinx_documentation) PS E:\lm_sc\sc_know_how> sphinx-build -b html docs/ docs/_build/html
```

#### Additional handy commands

Open the documentation

```{code-block} powershell
Invoke-Expression .\docs\_build\html\index.html
```

### build documentation on GitLab pipeline

This documentation generation is normally done by the CI/CD of your GitLab repository. How to include it into your CI/CD you can read in section: [include-sphinx-in-ci-cd].

With every push to the master branch, a new version of the documentation is built.

## Hints

To have a good start with writing your documentation, consider the following hints:

Paths:

- Sphinx can not handle spaces in paths
- it is mandatory to us /, the \ will not work

## Special topics

So that's it! But of course, there are some more specialized topics mentioned in the following sections. One of them is vital: The automatic [API documentation], where one can automatically parse overall code files, grab the docstrings and put them into the `.html` documentation. Latter saves the effort for taking care of the docstring and the API documentation separately. Therefore, one also needs to write the [docstring] in a particular style.

Moreover, one can use the [MySt]-Sphinx-extension to use [Markdown] files instead of [.rst] files since, in general, [Markdown] has a broader use case, and we want to use only a single file format for our documentation. Nativ [Sphinx] only relies on [.rst]-files, but with [MySt], we can translate the whole documentation into [Markdown], which is strongly recommended. Section [General hints for using Markdown with Sphinx] describes several related topics. In addition, the section [index file] always shows both the [.rst] and the [Markdown] version of the individual files.

## Chapter Overview

To conclude, you can find more details on [Sphinx] in **this chapters**:

- [Index files, Toc-Trees, API, and more]
- [conf.py]
- [docstrings]
- [include-sphinx-in-ci-cd]
- [Hints for using Markdown with Sphinx]

% Markdown links
[include-sphinx-in-ci-cd]: sphinx-and-ci-cd.md
[conf.py]: confpy.md
[Index files, Toc-Trees, API, and more]: content_management.md
[API documentation]: content_management.md
[Hints for using Markdown with Sphinx]: markdown_and_sphinx.md
[docstrings]: docstrings.md

% Repository links
[Sphinx-Website-Blueprint]: <https://code.siemens.com/smo-rs-lmc-en-lm-sc/blueprints/sphinx_website>
[Sphinx-Python-Package-Blueprint]: <https://code.siemens.com/smo-rs-lmc-en-lm-sc/blueprints/sphinx_python_package>

% External links
[.rst]: <https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html>
[Markdown]:<https://markdown.de/>
[MySt]: <https://myst-parser.readthedocs.io/en/latest/sphinx/intro.html>
[Sphinx]: <https://www.sphinx-doc.org/en/master/>
